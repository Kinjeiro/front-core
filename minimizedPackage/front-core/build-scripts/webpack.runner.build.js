const merge=require("lodash/merge"),fs=require("fs"),webpack=require("webpack"),rimraf=require("rimraf"),{writeToFile}=require("./utils/file-utils");function checkError(a,b,c){(a||b.compilation.errors.length)&&(a?(console.error(a.stack||a),a.details&&console.error(a.details)):console.error(b.compilation.errors),process.exit(1)),c&&c()}function startBuild({context:a,webpackFrontConfig:b,webpackBackendConfig:c}){const{appConfig:d,inProjectBuildAssets:e,appStyleConfig:f}=a;fs.existsSync(b.output.path)&&rimraf.sync(b.output.path);const g=merge({},{common:d.common,client:d.client}),h=e("default-config.json");writeToFile(h,g);const i=webpack(b),j=webpack(c);console.log("=== APP STYLES ===\n",f,"\n"),console.log("=== APP CONFIG (while build) ===\n",JSON.stringify(d,null,2)),i.plugin("compile",()=>console.log("Building frontend...")),j.plugin("compile",()=>console.log("Building server...")),i.run((a,b)=>{checkError(a,b,()=>{j.run(checkError)})})}module.exports=startBuild;