Error.stackTraceLimit=30;const respawn=require("respawn"),webpack=require("webpack"),STATS_OPTIONS={assets:!1,colors:!0,version:!1,modules:!1,hash:!1,timings:!1,chunks:!1,chunkModules:!1,reasons:!0,cached:!0,chunkOrigins:!0,errorDetails:!0};function startBackend({webpackConfig:a,buildDir:b,nodeOptions:c={}}){function d(a,b){return a||b.compilation.errors.length?(g=null,void(a?(console.error(a.stack||a),a.details&&console.error(a.details)):console.error(b.compilation.errors))):void(b.hash!==g&&(g=b.hash,process.stdout.write(`${b.toString(STATS_OPTIONS)}\n`)))}const e=`./${b}/${a.output.filename}`,f=webpack(a);let g=null;f.plugin("compile",()=>console.log("Building server..."));let h;f.plugin("done",()=>{console.log("Compilation is done.");try{if(console.log("Restarting server..."),!h){const a=Object.assign({cwd:".",maxRestarts:1,sleep:100,kill:1e3,stdio:[process.stdin,process.stdout,process.stderr]},c);h=respawn(["node","--harmony",e],a),h.start()}else h.stop(()=>h.start())}catch(a){console.error(a.toString())}}),!1===a.watch?f.run(d):f.watch(a.watchOptions,d)}module.exports=startBackend;